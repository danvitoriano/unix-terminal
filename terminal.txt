NOTES FROM LINUX BASIC TERMINAL
VISIE COURSE


whoami
=============================

=> whoami
returns the username before @


hostname
=============================

=> hostname
returns the hostname after @


~
=============================

=> ~
shortcut for the home folder (/home/danvitoriano)


pwd
=============================

=> pwd
returns the folder's name
~/Documents


cd
=============================

=> cd Desktop
change dir to Desktop folder

=> cd ..
one level up


cp
=============================

=> cp old.txt new.txt
copy file

=> cp file.txt newfolder
copy file to folder

=> cp -r dir
recursive copy dir
copy even if there are files inside


touch
=============================

=> touch new.txt
create a file


mkdir
=============================

=> mkdir docs
create docs folder


tab
=============================

=> cd Desk+(tab key)
complete the command


xgd
=============================

=> xdg-open
open default web browse

=> xdg-open http://www.google.com
open google


cat
=============================

=> ctrl+c
quit cat

=> ctrl+d
done a file

=> cat > doc.txt
write file without vi

=> cat text.txt
only read the file instead of terminal

=> cat old.txt > new.txt
duplicate / same as cp

=> cat > /dev/null
write a text to null


diff
=============================

=> diff dev.txt ux.txt
shows difference between files


vi
=============================

=> sudo apt-get install vim
install vim editor

=> vi text.txt
create a doc

=> :x
exit and save

=> :q
quit

=> :w
save

=> :w!
force save or a command


mysql
=============================

=> sudo apt-get install mysql-server
install mysql 
(you will be asked to enter and confirm root password)

=> mysql -uroot -proot
insert username and password to access mysql

=> CREATE DATABASE tuts;
create a tuts name database

=> SHOW DATABASES;
show databases in mysql

=> USE tuts;
selects a database

=> SHOW tables;
shows tables into a database

=> CREATE TABLE IF NOT EXISTS users (user_id int(5) NOT NULL AUTO_INCREMENT, user_name varchar(100) NOT NULL, PRIMARY KEY(user_id));
create a table if not exists and define columns

=> describe users
show detailed information about table columns

=> mysql -uroot -proot tuts < script.sql
execute a command inside tuts database

=> mysql -uroot -proot tuts < script.sql > list.txt
save the contnt from sql command into a txt file


man
=============================

=> man ls
returns manual from a command

=> q
quit manual

=> h
manual help


ls
=============================

=> ls *.txt
list all txt files

=> ls -l
list with more details

=> ls novo.txt -l -h (ls novo.txt -lh)
list file with more details and human readable

=> ls -a (-all)
list all (abbr and full command)

=> ls > list.txt
save the list content in a txt file

=> ls notexist > erro.txt
don't save into txt because dir not exist

=> ls notexist > erro.txt 2> saveerror.txt
save the error into second txt file


clear
=============================

=> clear
clear command line screen


mv
=============================

=> mv file.txt folder1
move file to folder

=> mv file.txt new.txt
rename file


rm
=============================

=> rm old.txt
remove file - delete

=> rm noexiste 2> /dev/null
discard the error msg

=> rm notexist 2>> erro.txt
save error after the last line

=> rm -r folder
recursive remove 
removes folder if there are files inside
but asks if there are blocked files

=> rm folder
remove only empty folders

=> rm folder -rf
removes even if there are blocked files


chmod
=============================

=> chmod -w file.txt
change permission
-w: remove write permission for all users

-rw -rw -r--
user - group - all


trash
=============================

=> trash file.txt
move to trash folder if it's installed

=> trash -list
list trash folder files


twidge
=============================

=> sudo apt-get install twidge
install twitter cliente for command line

=> twidge setup
setup authorization

=> twidge update
update twitter

=> twidge lsrecent
list recents twitter

=> twidge lsreplies
list latest replies


date
=============================

=> date
prints date

=> date > date.txt
save date into txt file

=> date >> date.txt
save date after the last line

=> date >> log.txt; rm notexist 2>> log.txt
save sate and error into a txt file
the ';' separate 2 commands


grep
=============================

=> grep banana
== monkeys like 'banana's
highlight search word into a input text

=> grep -i h nomes.txt
ignore case and search for letter 'h' into txt file

=> grep ¨/wp-admin" /var/log/apache2/access.log
search for an expression in a log file

=> grep ¨/wp-admin" /var/log/apache2/access.log > wpadmin.txt
search for an expression in a log file and write found results in a txt


gedit
=============================

=> gedit syslog.txt
open file in a visual editor


cut
=============================

=> cut -d ";" -f 1,3
=> one;two;three;four;five
== one;three
return first and third field (-f) separated from ";" delimitator (-d)

=> cut -d " " -f 1,3 syslog.txt > syslog2.txt
return first and third field (-f) separated from ";" delimitator (-d) and save results into a new txt file


sort
=============================

=> sort syslog.txt
order a file

=> sort -u syslog.txt
order a file listing unique values


| (pipe)
=============================

=> grep ¨/wp-admin" /var/log/apache2/access.log | cut -d " " -f 1 | sort -u > pipe.txt
search a file for a text, cut the delimited field, sort unique values and save into a txt
the pipe (|) links command after command before save into a file


curl
=============================

=> curl http://www.compracerta.com.br/ford
return the html code from an url

